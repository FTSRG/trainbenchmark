input:
  types:
    Route: [AntiJoin.primary]
  edges:
    follows: [Join1.primary]
    target: [Join1.secondary]
  nodes:
    currentPosition: [Join2.secondary]
    position: [Join3.secondary]

nodes:
  - Join1:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector(1)
      secondaryLength: 2
      secondarySelector: Vector(0)
      next: Join2.primary
  - Join2:
      type: HashJoiner
      primaryLength: 3
      primarySelector: Vector(2)
      secondaryLength: 2
      secondarySelector: Vector(0)
      next: Join3.primary
  - Join3:
      type: HashJoiner
      primaryLength: 4
      primarySelector: Vector(1)
      secondaryLength: 2
      secondarySelector: Vector(0)
      next: Ineq
  - Ineq:
      type: Inequality
      nodeIndex: 3
      inequals: Vector(4)
      next: AntiJoin.secondary
  - AntiJoin:
      type: HashLeftAntijoiner
      primarySelector: Vector(0)
      secondarySelector: Vector(0)
      next: production
