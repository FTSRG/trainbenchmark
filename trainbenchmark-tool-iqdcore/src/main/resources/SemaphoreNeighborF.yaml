input:
  edges:
    connectsTo: [Join5.primary]
    monitoredBy: [Join1.primary, Join1.secondary]
    exit: [Join4.secondary]
    gathers: [Join2.secondary, Join3.secondary]
    entry: [AntiJoin.secondary]

nodes:
  - Join1:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector()
      secondaryLength: 2
      secondarySelector: Vector()
      next: [Join2.primary]
  - Join2:
      type: HashJoiner
      primaryLength: 4
      primarySelector: Vector(1)
      secondaryLength: 2
      secondarySelector: Vector(1)
      next: [Join3.primary]
  - Join3:
      type: HashJoiner
      primaryLength: 5
      primarySelector: Vector(3)
      secondaryLength: 2
      secondarySelector: Vector(1)
      next: [Inequality]
  - Inequality:
      type: Inequality
      nodeIndex: 4
      inequals: Vector(5)
      next: [Join4.primary]
  - Join4:
      type: HashJoiner
      primaryLength: 6
      primarySelector: Vector(4)
      secondaryLength: 2
      secondarySelector: Vector(0)
      next: [Join5.secondary]
  - Join5:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector(0,1)
      secondaryLength: 7
      secondarySelector: Vector(0,2)
      next: [AntiJoin.primary]
  - AntiJoin:
      type: HashLeftAntijoiner
      primarySelector: Vector(5, 6)
      secondarySelector: Vector(0, 1)
      next: [Trimmer]
  - Trimmer:
      type: Trimmer
      selectionVector: Vector(6, 4, 5, 1, 3, 0, 2)
      next: [production]
