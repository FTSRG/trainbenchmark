input:
  types:
    Route: [AntiJoin.primary]
  edges:
    follows: [Join3.primary]
    target: [Join1.primary]
  nodes:
    currentPosition: [Join2.primary]
    position: [Join1.secondary]

nodes:
  - Join1:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector(0)
      secondaryLength: 2
      secondarySelector: Vector(0)
      next: Join2.secondary
  - Join2:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector(0)
      secondaryLength: 3
      secondarySelector: Vector(1)
      next: Ineq
  - Ineq:
      type: Inequality
      nodeIndex: 1
      inequals: Vector(3)
      next: Trim
  - Trim:
      type: Trimmer
      selectionVector: Vector(2)
      next: Join3.secondary
  - Join3:
      type: HashJoiner
      primaryLength: 2
      primarySelector: Vector(1)
      secondaryLength: 1
      secondarySelector: Vector(0)
      next: AntiJoin.secondary
  - AntiJoin:
      type: HashLeftAntijoiner
      primarySelector: Vector(0)
      secondarySelector: Vector(0)
      next: production
